{"remainingRequest":"/Users/menglei/test/vue3-vant-axios-k/node_modules/babel-loader/lib/index.js!/Users/menglei/test/vue3-vant-axios-k/node_modules/eslint-loader/index.js??ref--13-0!/Users/menglei/test/vue3-vant-axios-k/src/assets/js/service.js","dependencies":[{"path":"/Users/menglei/test/vue3-vant-axios-k/src/assets/js/service.js","mtime":1568094804616},{"path":"/Users/menglei/test/vue3-vant-axios-k/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/menglei/test/vue3-vant-axios-k/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/menglei/test/vue3-vant-axios-k/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport axios from 'axios';\nvar baseurl = process.env.NODE_ENV === 'development' ? '' : '';\nvar service = axios.create({\n  baseURL: baseurl // url = base url + request url\n  // withCredentials: true, // 表示跨域请求时是否需要使用凭证\n\n}); // request拦截器 request interceptor\n\nservice.interceptors.request.use(function (config) {\n  // 不传递默认开启loading\n  if (!config.hideloading) {\n    // loading\n    _Toast.loading({\n      forbidClick: true\n    });\n  } // if (store.getters.token) {\n  //   config.headers['X-Token'] = ''\n  // }\n\n\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  _Toast.clear();\n\n  var res = response.data;\n\n  if (res.status && res.status !== 200) {\n    // 登录超时,重新登录\n    if (res.status === 401) {// store.dispatch('FedLogOut').then(() => {\n      //   location.reload()\n      // })\n    }\n\n    return Promise.reject(res || 'error');\n  } else {\n    return Promise.resolve(res);\n  }\n}, function (error) {\n  _Toast.clear();\n\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n}); //(发送post请求)\n\nexport function POST(url, params) {\n  return service.post(url, {\n    params: param\n  }).then(function (response) {}).catch(function (error) {});\n} // 发送get请求\n\nexport function GET(url, param) {\n  return service.get(url, {\n    params: param\n  }).then(function (response) {}).catch(function (error) {});\n}\nexport default service;",{"version":3,"sources":["/Users/menglei/test/vue3-vant-axios-k/src/assets/js/service.js"],"names":["axios","baseurl","process","env","NODE_ENV","service","create","baseURL","interceptors","request","use","config","hideloading","loading","forbidClick","error","console","log","Promise","reject","response","clear","res","data","status","resolve","POST","url","params","post","param","then","catch","GET","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyC,EAAzC,GAA8C,EAA5D;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEN,OADgB,CACP;AAClB;;AAFyB,CAAb,CAAhB,C,CAKA;;AACAI,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN;AACA,MAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AACrB;AACA,WAAMC,OAAN,CAAc;AACVC,MAAAA,WAAW,EAAE;AADH,KAAd;AAGH,GAPK,CAQN;AACA;AACA;;;AACA,SAAOH,MAAP;AACH,CAbL,EAcI,UAAAI,KAAK,EAAI;AACL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFK,CAEc;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAlBL,E,CAoBA;;AACAV,OAAO,CAACG,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B,CACI,UAAAU,QAAQ,EAAI;AACR,SAAMC,KAAN;;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACG,IAArB;;AACA,MAAID,GAAG,CAACE,MAAJ,IAAcF,GAAG,CAACE,MAAJ,KAAe,GAAjC,EAAsC;AAClC;AACA,QAAIF,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB,CACpB;AACA;AACA;AACH;;AACD,WAAON,OAAO,CAACC,MAAR,CAAeG,GAAG,IAAI,OAAtB,CAAP;AACH,GARD,MAQO;AACH,WAAOJ,OAAO,CAACO,OAAR,CAAgBH,GAAhB,CAAP;AACH;AACJ,CAfL,EAgBI,UAAAP,KAAK,EAAI;AACL,SAAMM,KAAN;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EAFK,CAEsB;;AAC3B,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CApBL,E,CAuBA;;AACA,OAAO,SAASW,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAE9B,SAAOvB,OAAO,CAACwB,IAAR,CAAaF,GAAb,EAAkB;AACrBC,IAAAA,MAAM,EAAEE;AADa,GAAlB,EAGNC,IAHM,CAGD,UAAAX,QAAQ,EAAI,CAAE,CAHb,EAINY,KAJM,CAIA,UAACjB,KAAD,EAAW,CAAE,CAJb,CAAP;AAKH,C,CACD;;AACA,OAAO,SAASkB,GAAT,CAAaN,GAAb,EAAkBG,KAAlB,EAAyB;AAC5B,SAAOzB,OAAO,CAAC6B,GAAR,CAAYP,GAAZ,EAAiB;AAChBC,IAAAA,MAAM,EAAEE;AADQ,GAAjB,EAGFC,IAHE,CAGG,UAAAX,QAAQ,EAAI,CAAE,CAHjB,EAIFY,KAJE,CAII,UAACjB,KAAD,EAAW,CAAE,CAJjB,CAAP;AAMH;AAED,eAAeV,OAAf","sourcesContent":["import axios from 'axios'\nimport {\n    Toast\n} from 'vant'\n\nlet baseurl = process.env.NODE_ENV === 'development' ? '' : ''\nconst service = axios.create({\n    baseURL: baseurl, // url = base url + request url\n    // withCredentials: true, // 表示跨域请求时是否需要使用凭证\n})\n\n// request拦截器 request interceptor\nservice.interceptors.request.use(\n    config => {\n        // 不传递默认开启loading\n        if (!config.hideloading) {\n            // loading\n            Toast.loading({\n                forbidClick: true\n            })\n        }\n        // if (store.getters.token) {\n        //   config.headers['X-Token'] = ''\n        // }\n        return config\n    },\n    error => {\n        // do something with request error\n        console.log(error) // for debug\n        return Promise.reject(error)\n    }\n)\n// respone拦截器\nservice.interceptors.response.use(\n    response => {\n        Toast.clear()\n        const res = response.data\n        if (res.status && res.status !== 200) {\n            // 登录超时,重新登录\n            if (res.status === 401) {\n                // store.dispatch('FedLogOut').then(() => {\n                //   location.reload()\n                // })\n            }\n            return Promise.reject(res || 'error')\n        } else {\n            return Promise.resolve(res)\n        }\n    },\n    error => {\n        Toast.clear()\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n//(发送post请求)\nexport function POST(url, params) {\n\n    return service.post(url, {\n        params: param\n    })\n    .then(response => {})\n    .catch((error) => {})\n}\n// 发送get请求\nexport function GET(url, param) {\n    return service.get(url, {\n            params: param\n        })\n        .then(response => {})\n        .catch((error) => {})\n\n}\n\nexport default service"]}]}